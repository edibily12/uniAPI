name: Deploy api to server

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key
          chmod 600 ~/.ssh/ec2_key
          ssh-keyscan ${{ secrets.EC2_IP }} >> ~/.ssh/known_hosts

      - name: Create secure config file
        run: |
          ssh -i ~/.ssh/ec2_key ubuntu@${{ secrets.EC2_IP }} "sudo bash -c 'cat > /etc/cs421_config.conf <<\"EOF\"
          BACKUP_LOG_FILE=${{ secrets.BACKUP_LOG_FILE }}
          BACKUP_DIR=${{ secrets.BACKUP_DIR }}
          API_DIR=${{ secrets.API_DIR }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASS=${{ secrets.DB_PASS }}
          DB_NAME=${{ secrets.DB_NAME }}
          EOF
          ' && sudo chmod 600 /etc/cs421_config.conf && sudo chown root:root /etc/cs421_config.conf"

      - name: Deploy Application and Scripts
        run: |
          # First upload bash_scripts using scp
          scp -i ~/.ssh/ec2_key -o StrictHostKeyChecking=no -r ./bash_scripts ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/

          # Then run the deployment commands
          ssh -i ~/.ssh/ec2_key -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
            # 1. Create api directory
            sudo mkdir -p ${{ secrets.API_DIR }}
            sudo chown -R ubuntu:www-data ${{ secrets.API_DIR }}
            sudo chmod -R 775 ${{ secrets.API_DIR }}

            # 2. Verify bash scripts were transferred
            echo "Contents of bash scripts:"
            ls -la ${{ secrets.BASH_DIR }}

            # 3. Make scripts executable
            chmod +x ${{ secrets.BASH_DIR }}/*.sh

            # 4. Deploy api app
            cd ${{ secrets.API_DIR }}
            if [ -d .git ]; then
              git pull origin master
            else
              git clone https://github.com/edibily12/uniAPI.git .
            fi

            # 5. api setup
            composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev
            sudo chown -R www-data:www-data ${{ secrets.API_DIR }}/storage
            sudo chown -R www-data:www-data ${{ secrets.API_DIR }}/bootstrap/cache
            touch ${{ secrets.API_DIR }}/storage/logs/laravel.log
            sudo chown www-data:www-data ${{ secrets.API_DIR }}/storage/logs/laravel.log
            sudo chmod 664 ${{ secrets.API_DIR }}/storage/logs/laravel.log

            echo "Deployment completed succcessfully!"
          EOF

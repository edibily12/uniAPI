name: Deploy Laravel to EC2

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key
          chmod 600 ~/.ssh/ec2_key
          ssh-keyscan ${{ secrets.EC2_IP }} >> ~/.ssh/known_hosts

      - name: Create config file on EC2
        run: |
          ssh -i ~/.ssh/ec2_key -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << EOF
            sudo bash -c 'cat > /etc/backup_config.conf << "CONFIG"
            BACKUP_LOG_FILE=${{ secrets.BACKUP_LOG_FILE }}
            BACKUP_DIR=${{ secrets.BACKUP_DIR }}
            API_DIR=${{ secrets.API_DIR }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASS=${{ secrets.DB_PASS }}
            DB_NAME=${{ secrets.DB_NAME }}
            CONFIG'
            sudo chmod 600 /etc/backup_config.conf
          EOF

      - name: Deploy Application and Scripts
        run: |
          # First upload bash_scripts using scp
          scp -i ~/.ssh/ec2_key -o StrictHostKeyChecking=no -r ./bash_scripts ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/

          # Then run the deployment commands
          ssh -i ~/.ssh/ec2_key -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
            # 1. Create api directory
            sudo mkdir -p /apps/uniAPI
            sudo chown -R ubuntu:www-data /apps/uniAPI
            sudo chmod -R 775 /apps/uniAPI

            # 2. Verify bash_scripts were transferred
            echo "Contents of bash_scripts:"
            ls -la /home/ubuntu/bash_scripts

            # 3. Make scripts executable
            chmod +x /home/ubuntu/bash_scripts/*.sh

            # 4. Deploy api app
            cd /apps/uniAPI
            if [ -d .git ]; then
              git pull origin master
            else
              git clone https://github.com/edibily12/uniAPI.git .
            fi

            # 5. api setup
            composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev
            sudo chown -R www-data:www-data /apps/uniAPI/storage
            sudo chown -R www-data:www-data /apps/uniAPI/bootstrap/cache
            touch /apps/uniAPI/storage/logs/laravel.log
            sudo chown www-data:www-data /apps/uniAPI/storage/logs/laravel.log
            sudo chmod 664 /apps/uniAPI/storage/logs/laravel.log

            echo "Deployment complete!"
          EOF
